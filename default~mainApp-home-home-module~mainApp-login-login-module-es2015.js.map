{"version":3,"sources":["./src/app/common/components/button/button.component.ts","./src/app/common/components/button/button.component.html","./src/app/common-imports.module.ts","./src/app/common/validators/generic-validator.ts"],"names":[],"mappings":"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","file":"default~mainApp-home-home-module~mainApp-login-login-module-es2015.js","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, ViewEncapsulation, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'kudos-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.less'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class KudosButtonComponent implements OnInit {\n  @Input()\n  textKey: string = '';\n\n  @Input()\n  text: string = '';\n\n  @Input()\n  styles: Object = {};\n\n  @Input()\n  disabled: boolean = false;\n\n  @Input()\n  color: string = 'primary';\n\n  @Input()\n  showIcon: boolean = false;\n\n  @Input()\n  iconName: string = '';\n\n  @Input()\n  disableRipple: boolean = false;\n\n  buttonText: string = '';\n\n  @Input()\n  buttonType: any = 'primary';\n\n  @Input()\n  block: boolean = false;\n\n  @Output()\n  onButtonClick: EventEmitter<void>;\n\n  constructor() {\n    this.onButtonClick = new EventEmitter();\n  }\n\n  ngOnInit() {\n    this.addButtonText();\n  }\n\n  click(event: any) {\n    if (!this.disabled) {\n      event.currentTarget.blur();\n      this.onButtonClick.emit(event);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!changes.text.isFirstChange() && changes.text.previousValue !== changes.text.currentValue) {\n      this.addButtonText();\n    }\n  }\n\n  addButtonText() {\n    if (this.textKey === undefined && this.text === undefined) {\n      throw Error('No button text provided.');\n    }\n\n    if (this.text !== undefined) {\n      this.buttonText = this.text;\n    } else {\n      this.loadTranslation();\n    }\n  }\n\n  loadTranslation() {\n    //to be implemented with translation service\n  }\n}\n","<button\n  nz-button\n  [ngClass]=\"{ kudosButtonStyleBlockOn: block, kudosButtonStyle: !block }\"\n  [nzType]=\"buttonType\"\n  [nzBlock]=\"block\"\n  [ngStyle]=\"styles\"\n  (click)=\"click($event)\"\n>\n  {{ buttonText }}\n</button>\n","import { NgModule } from '@angular/core';\nimport { KudosThirdPartyImportsModule } from './third-party-imports.module';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { KudosButtonComponent } from './common/components/button/button.component';\n@NgModule({\n  imports: [KudosThirdPartyImportsModule, CommonModule, ReactiveFormsModule],\n  declarations: [KudosButtonComponent],\n  exports: [CommonModule, ReactiveFormsModule, KudosButtonComponent],\n  providers: [],\n  entryComponents: [],\n})\nexport class KudosCommonImportsModule {}\n","import { FormGroup } from '@angular/forms';\n\n// Generic validator for Reactive forms\n// Implemented as a class, not a service, so it can retain state for multiple forms.\nexport class GenericValidator {\n  // Provide the set of valid validation messages\n  // Stucture:\n  // controlName1: {\n  //     validationRuleName1: 'Validation Message.',\n  //     validationRuleName2: 'Validation Message.'\n  // },\n  // controlName2: {\n  //     validationRuleName1: 'Validation Message.',\n  //     validationRuleName2: 'Validation Message.'\n  // }\n  constructor(private validationMessages: { [key: string]: { [key: string]: string } }) {}\n\n  // Processes each control within a FormGroup\n  // And returns a set of validation messages to display\n  // Structure\n  // controlName1: 'Validation Message.',\n  // controlName2: 'Validation Message.'\n  processMessages(container: FormGroup): { [key: string]: string } {\n    const messages: any = {};\n    for (const controlKey in container.controls) {\n      if (container.controls.hasOwnProperty(controlKey)) {\n        const c = container.controls[controlKey];\n        // If it is a FormGroup, process its child controls.\n        if (c instanceof FormGroup) {\n          const childMessages = this.processMessages(c);\n          Object.assign(messages, childMessages);\n        } else {\n          // Only validate if there are validation messages for the control\n          if (this.validationMessages[controlKey]) {\n            messages[controlKey] = '';\n            if ((c.dirty || c.touched) && c.errors) {\n              Object.keys(c.errors).map((messageKey) => {\n                if (this.validationMessages[controlKey][messageKey]) {\n                  messages[controlKey] += this.validationMessages[controlKey][messageKey] + ' ';\n                }\n              });\n            }\n          }\n        }\n      }\n    }\n    return messages;\n  }\n}\n"],"sourceRoot":"webpack:///"}